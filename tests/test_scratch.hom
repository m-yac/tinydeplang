
def id : ∀ i, forall (A : 𝕋{i}), A -> A
       = (i) (A : 𝕋{i}) (x : A) >-> x

def type Empty : 𝕋{0} where ()

def type Nat : 𝕋{0} where
    O : Nat,
    S : Nat -> Nat

def (main : 𝕋{1}) = id 2 𝕋{1} 𝕋{0}
